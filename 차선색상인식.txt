#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import rospy
import cv2
import numpy as np
from sensor_msgs.msg import CompressedImage
from cv_bridge import CvBridge

class LaneDetect:
    def __init__(self):
        rospy.init_node('LaneDetectNode')
        self.bridge = CvBridge()

        rospy.Subscriber("/limo/color/image_raw/compressed", CompressedImage, self.callback)

    def image_callback(self, msg):
        if msg != -1: # 유효한 메세지인 경우
            cv_img = self.bridge.compressed_imgmsg_to_cv2(msg)
            height, width = cv_img.shape[:2]
		        roi = cv_img[height // 2:, :]  # 하단 절반만 추출
		        hsv = cv2.cvtColor(roi, cv2.COLOR_BGR2HSV)

            # 노란색 범위
            lower_yellow = np.array([15, 80, 80])
            upper_yellow = np.array([35, 255, 255])
            yellow_mask = cv2.inRange(hsv, lower_yellow, upper_yellow)
            # 흰색 범위
            lower_white = np.array([0, 0, 200])
            upper_white = np.array([180, 25, 255])
            white_mask = cv2.inRange(hsv, lower_white, upper_white)
            # 두 마스크 결합
            combined_mask = cv2.bitwise_or(yellow_mask, white_mask)
        
            # display
            cv2.imshow("Yellow Mask", yellow_mask)
            cv2.imshow("White Mask", white_mask)
            cv2.imshow("Combined Mask", combined_mask)
            cv2.imshow("ROI Image", roi)
            cv2.imshow("Raw Image", cv_img)
            cv2.waitKey(1)

if __name__ == '__main__':
    try:
        LaneDetect()
        rospy.spin()
    except rospy.ROSInterruptException:
        print("Shutting down")
        cv2.destroyAllWindows()
